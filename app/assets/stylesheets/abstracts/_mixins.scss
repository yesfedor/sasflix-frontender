/* mixins */
@use "sass:map";
@use 'variables' as vars;

@mixin media-max($mediaWidth) {
	@media only screen and (max-width: $mediaWidth) {
		@content;
	}
}

@mixin media-min($mediaWidth) {
	@media only screen and (min-width: $mediaWidth) {
		@content;
	}
}

@mixin media-distance($mediaWidthMin, $mediaWidthMax) {
	@media only screen and (min-width: $mediaWidthMin) and (max-width: $mediaWidthMax - 1) {
		@content;
	}
}

@mixin bp-desktop-min {
	@media only screen and (min-width: map.get(vars.$breakpoints, desktop-xs)) {
		@content;
	}
}

@mixin bp-tablet-max {
	@media only screen and (max-width: map.get(vars.$breakpoints, tablet)) {
		@content;
	}
}

@mixin bp-tablet-min {
	@media only screen and (min-width: map.get(vars.$breakpoints, tablet-xs)) {
		@content;
	}
}

@mixin bp-mobile-max {
	@media only screen and (max-width: map.get(vars.$breakpoints, mobile)) {
		@content;
	}
}

@mixin bp-mobile-min {
	@media only screen and (max-width: map.get(vars.$breakpoints, mobile-xs)) {
		@content;
	}
}

@mixin typography-font-display {
  font-family: map.get(vars.$typography, 'display'), Roboto, system-ui;
  font-feature-settings: 'liga' off, 'clig' off;
}

@mixin typography-font-text {
  font-family: map.get(vars.$typography, 'text'), Roboto, system-ui;
  font-feature-settings: 'liga' off, 'clig' off;
}

@mixin typography-h1 {
  color: map.get(vars.$colors, 'text-body');
  font-family: "SF Pro Text";
  font-size: 28px;
  font-style: normal;
  font-weight: 700;
  line-height: normal;
  letter-spacing: -1.45px;
}
